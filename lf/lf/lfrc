# settings

set errorfmt "\033[31m%s\033[0m"
set hidden
set ifs '\n'
set promptfmt "\033[36m%d\033[0m\033[36m%f\033[0m"
set ratios 2:3:4
set scrolloff 3
set shell 'zsh'

# commands

cmd q :quit

cmd overwrite-async %{{
  set -f
  local mode=$(head -1 ~/.local/share/lf/files)
  local list=$(sed 1d ~/.local/share/lf/files)
  set -- _ $list; shift
  [ $# -gt 0 ] || exit
  case $mode in
    copy) rsync -r "$@" ./;;
    move) rsync -r --remove-source-files "$@" ./;;
  esac
  lf -remote 'save\nmove\n'
  lf -remote "send $id load"
  lf -remote "send $id echo \"\033[32mOverwrote successfully\033[0m\""
}}

cmd trash %{{
  while IFS= read -r item; do trash-put "$item"; done <<< "$fx"
}}

cmd open ${{
  case $(file --mime-type "$f" -b) in
    text/*|application/csv|application/json|inode/symlink) $EDITOR "$fx";;
    *) xdg-open "$f" & disown;;
  esac
}}

cmd extract %{{
  case "$f" in
    *.gz) gzip --decompress "$f";;
    *.zip) 7z x "$f";;
    *) lf -remote "send $id echoerr 'unknown archive format'";;
  esac
}}

cmd gzip %gzip "$f"
cmd zip %7z a "$f.zip" "$f"

cmd fzf ${{
  local res="$(fzf)"
  [[ $res ]] || return
  [[ -f "$res" ]] && local cmd='select'
  [[ -d "$res" ]] && local cmd='cd'
  lf -remote "send $id $cmd \"$res\""
}}

# key bindings

map <esc> quit
map <enter> open

map <f-2> rename
map <f-7> push %mkdir<space>

map <c-f> :fzf

map D delete
map M push %mkdir<space>
map o overwrite-async
map t trash

map ae extract
map ag gzip
map az zip

map gxc cd ~/.config
map gxa cd ~/.cache
map gxd cd ~/.local/share

map gc cd ~/code

map gd cd /run/media/greg/data
map gg cd /run/media/greg/games

