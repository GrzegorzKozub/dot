[alias]
  # log
  ls = log --graph --abbrev-commit --date=relative --format=format:'%C(yellow)%h %C(auto)%s %C(cyan)%an %C(white)%ar %C(auto)%D%C(reset)'
  lsa = ls --all
  ll = log --graph --abbrev-commit --format=format:'%C(yellow)%h %C(cyan)%an %C(white)%aD %C(auto)%D%n%C(auto)%B%C(reset)'
  lla = ll --all
  # branch
  cm = !git checkout $(git symbolic-ref refs/remotes/origin/HEAD | cut -f4 -d/)
  # tag
  lt = describe --abbrev=0 --tags
  # github
  url = "!f() { echo \"https://github.com/$(git config --get remote.origin.url | cut -f2 -d':' | cut -f1 -d'.')\"; }; f"
  web = "!f() { xdg-open $(git url) > /dev/null; }; f"
  pr = "!f() { xdg-open $(git url)/pull/new/$(git branch --show-current) > /dev/null; }; f"
  # grep
  grp = "!f() { git log -G \"$@\" -p; }; f"
[color]
  advice = auto
  branch = auto
  diff = auto
  grep = auto
  interactive = auto
  pager = true
  push = auto
  showBranch = auto
  status = auto
  ui = auto
[color.advice]
  hint = normal
[color.blame]
  highlightRecent = brightblack,12 month ago,white,1 month ago,yellow,1 week ago,red
  repeatedLines = cyan
[color.branch]
  current = blue bold
  local = blue
  plain = normal
  remote = green
  upstream = green
[color.decorate]
  HEAD = red
  branch = blue
  remoteBranch = green
  tag = magenta
  stash = magenta
[color.diff]
  commit = yellow
  func = blue
  frag = magenta
  meta = cyan
  new = green
  newMoved = green italic
  newMovedAlternative = brightgreen italic
  old = red
  oldMoved = red italic
  oldMovedAlternative = brightred italic
  plain = normal
  whitespace = red reverse
[color.grep]
  column = magenta
  context = normal
  filename = cyan
  function = blue
  lineNumber = magenta
  # match = yellow # not compatible with delta
  matchContext = yellow
  # matchSelected = yellow # not compatible with delta
  selected = normal
  separator = brightblack
[color.interactive]
  error = red
  header = white
  help = normal
  prompt = magenta
[color.push]
  error = red
[color.status]
  added = green
  branch = blue
  changed = yellow
  header = normal
  localBranch = blue
  nobranch = red
  remoteBranch = green
  unmerged = red
  untracked = red
[commit]
  gpgsign = true
[core]
  autocrlf = false
  editor = nvim
  fscache = true
  fsmonitor = true
  # pager = less --quit-if-one-screen --RAW-CONTROL-CHARS --use-color -DEr -DPw -DSkY -Ddy -Dsm -Dub
  pager = delta
  symlinks = true
  untrackedCache = true
  whitespace = blank-at-eol,tab-in-indent
[credential]
	helper = gopass
[credential "http://osiris"]
  username = grkoz_adm
[credential "http://tfs"]
  username = grkoz_adm
[delta]
  blame-code-style = syntax
  blame-format = {commit:<8} {author:<8.8} {timestamp:<8.8}
  blame-palette = normal
  blame-separator-format = " {n:>3_block}"
  file-decoration-style = ""
  file-style = cyan
  grep-file-style = cyan
  grep-line-number-style = magenta
  grep-match-line-style = yellow
  grep-match-word-style = yellow
  # grep-output-type = ripgrep
  hunk-header-decoration-style = ""
  hunk-header-file-style = cyan
  hunk-header-line-number-style = magenta
  # hunk-header-style = line-number blue
  hunk-header-style = omit
  # hyperlinks = true
  inline-hint-style = red
  line-numbers = true
  line-numbers-left-format = "{nm:>3} "
  line-numbers-minus-style = red
  line-numbers-plus-style = green
  line-numbers-right-format = "{np:>3} "
  line-numbers-zero-style = brightblack
  map-styles = red italic => syntax "#554833", green italic => syntax "#3F4946", bright-red italic => syntax "#7E6338", bright-green italic => syntax "#4F655F"
  max-line-length = 256
  merge-conflict-begin-symbol = ""
  merge-conflict-end-symbol = ""
  merge-conflict-ours-diff-header-decoration-style = ""
  merge-conflict-ours-diff-header-style = green
  merge-conflict-theirs-diff-header-decoration-style = ""
  merge-conflict-theirs-diff-header-style = blue
  minus-emph-style = syntax "#7A4541"
  minus-non-emph-style = syntax "#533A37"
  minus-style = syntax "#533A37"
  plus-emph-style = syntax "#636942"
  plus-non-emph-style = syntax "#494B38"
  plus-style = syntax "#494B38"
  # side-by-side = true
  syntax-theme = gruvbox-material-dark
  tabs = 2
  width = variable
  wrap-left-symbol = " "
  # wrap-max-lines = 0
  wrap-right-prefix-symbol = " "
  wrap-right-symbol = " "
[diff]
  algorithm = histogram
  colorMoved = default
  guitool = code
  renames = copies
  tool = nvim
[difftool]
  prompt = false
[difftool "nvim"]
  cmd = nvim -d "$LOCAL" "$REMOTE"
[difftool "code"]
  cmd = code --wait --diff "$LOCAL" "$REMOTE"
[filter "lfs"]
  clean = git-lfs clean -- %f
  process = git-lfs filter-process
  required = true
  smudge = git-lfs smudge -- %f
[gc]
  auto = 1
[github]
  user = GrzegorzKozub
[gpg]
  # format = ssh
[init]
  defaultBranch = master
[merge]
  guitool = code
  renormalize = true
  tool = nvim
[mergetool]
  keepBackup = false
  prompt = false
[mergetool "nvim"]
  cmd = nvim -d "$LOCAL" "$MERGED" "$BASE" "$REMOTE" -c 'wincmd J | wincmd ='
[mergetool "code"]
  cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[pack]
  packSizeLimit = 2g
[pull]
  rebase = true
[push]
  autoSetupRemote = true
  default = simple
[rebase]
  autosquash = true
  autostash = true
[rerere]
  enabled = true
[safe]
  directory = *
[user]
  email = grzegorz.kozub@gmail.com
  name = greg
  # signingkey = ~/.ssh/sig.pub
  signingkey = F49061714C719E6D
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/audience"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/cleanup"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/email-sdk-go"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/email-validator-go"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/env"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/go-backoff"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/terminator"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/toolbox"]
  path = go.inc

