[alias]
  blm = blame --color-by-age
  gp = grep --context 3 --heading --line-number --show-function
  ll = log --graph --abbrev-commit --format=format:'%C(3)%h %C(6)%an %C(7)%aD %C(auto)%D%n%C(auto)%B%C(reset)'
  lla = ll --all
  ls = log --graph --abbrev-commit --date=relative --format=format:'%C(3)%h %C(auto)%s %C(6)%an %C(7)%ar %C(auto)%D%C(reset)'
  lsa = ls --all
  lt = describe --abbrev=0 --tags
[color]
  advice = auto
  branch = auto
  diff = auto
  grep = auto
  interactive = auto
  pager = true
  push = auto
  showBranch = auto
  status = auto
  ui = auto
[color.advice]
  hint = normal
[color.blame]
  highlightRecent = brightblack,12 month ago,white,1 month ago,yellow,1 week ago,red
  repeatedLines = cyan
[color.branch]
  current = blue bold
  local = blue
  plain = normal
  remote = green
  upstream = green
[color.decorate]
  HEAD = red
  branch = blue
  remoteBranch = green
  tag = magenta
  stash = magenta
[color.diff]
  commit = yellow
  func = blue
  frag = magenta
  meta = cyan
  new = green
  newMoved = green italic
  newMovedAlternative = brightgreen italic
  old = red
  oldMoved = red italic
  oldMovedAlternative = brightred italic
  plain = normal
  whitespace = red reverse
[color.grep]
  column = magenta
  context = normal
  filename = cyan
  function = blue
  lineNumber = magenta
  match = yellow
  matchContext = yellow
  matchSelected = yellow
  selected = normal
  separator = brightblack
[color.interactive]
  error = red
  header = white
  help = normal
  prompt = magenta
[color.push]
  error = red
[color.status]
  added = green
  branch = blue
  changed = yellow
  header = normal
  localBranch = blue
  nobranch = red
  remoteBranch = green
  unmerged = red
  untracked = red
[commit]
  gpgsign = true
[core]
  autocrlf = false
  editor = nvim
  fscache = true
  pager = less --quit-if-one-screen --RAW-CONTROL-CHARS --use-color -DPw -DSkY -Ddy -Dsm -Dub
  symlinks = true
  whitespace = blank-at-eol,tab-in-indent
[diff]
  algorithm = histogram
  colorMoved = default
  guitool = code
  renames = copies
  tool = nvim
[difftool]
  prompt = false
[difftool "nvim"]
  cmd = nvim -d "$LOCAL" "$REMOTE"
[difftool "code"]
  cmd = code --wait --diff "$LOCAL" "$REMOTE"
[filter "lfs"]
  clean = git-lfs clean -- %f
  process = git-lfs filter-process
  required = true
  smudge = git-lfs smudge -- %f
[gc]
  auto = 1
[github]
  user = GrzegorzKozub
[gpg]
  # format = ssh
[merge]
  guitool = code
  renormalize = true
  tool = nvim
[mergetool]
  keepBackup = false
  prompt = false
[mergetool "nvim"]
  cmd = nvim -d "$LOCAL" "$MERGED" "$BASE" "$REMOTE" -c 'wincmd J | wincmd ='
[mergetool "code"]
  cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[pack]
  packSizeLimit = 2g
[pull]
  rebase = true
[push]
  autoSetupRemote = true
  default = simple
[rebase]
  autosquash = true
  autostash = true
[rerere]
  enabled = true
[safe]
  directory = *
[user]
  email = grzegorz.kozub@gmail.com
  name = greg
  # signingkey = ~/.ssh/sig.pub
  signingkey = F49061714C719E6D
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/audience"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/cleanup"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/email-validator-go"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/env"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/go-backoff"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/terminator"]
  path = go.inc
[includeIf "hasconfig:remote.*.url:**/ApsisInternational/toolbox"]
  path = go.inc

